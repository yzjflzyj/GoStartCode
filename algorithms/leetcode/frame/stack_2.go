package main

/**
 * 921. 使括号有效的最少添加
 * 只有满足下面几点之一，括号字符串才是有效的：
 * 它是一个空字符串，或者
 * 它可以被写成AB（A与B连接）, 其中A 和B都是有效字符串，或者
 * 它可以被写作(A)，其中A是有效字符串。
 * 给定一个括号字符串 s ，移动N次，你就可以在字符串的任何位置插入一个括号。
 * 例如，如果 s = "()))" ，你可以插入一个开始括号为 "(()))" 或结束括号为 "())))" 。
 * 返回 为使结果字符串 s 有效而必须添加的最少括号数。
 */
// 注意左右括号是有顺序要求的，左括号多了，可以后面再补（可以累计），但是右括号多了，当时就要补齐
func minAddToMakeValid(s string) int {
	if s == "" {
		return 0
	}
	res := 0
	need := 0
	for _, v := range s {
		if v == '(' {
			need++
		} else {
			need--
			if need < 0 {
				res++
				need = 0
			}
		}
	}
	return res + need
}

func main() {

}
